NAME
    WebService::Amazon::ElasticBeanstalk - Basic interface to Amazon
    ElasticBeanstalk

VERSION
    Version 0.0.1

SYNOPSIS
    This module provides a Perl wrapper around Amazon's (
    <http://aws.amazon.com> ) ElasticBeanstalk API. You will need to be a
    Smartling customer and have your API Key and project Id before you'll be
    able to do anything with this module.

    Note: Some parameter validation is purposely lax. The API will generally
    fail when invalid params are passed. The errors are not helpful.

INTERFACE
  new
    Inherited from WebService::Simple, and takes all the same arguments. You
    must provide the Amazon required arguments of id, region, and secret in
    the param hash:

     my $ebn = WebService::Amazon::ElasticBeanstalk->new( param => { id     => $AWS_ACCESS_KEY_ID,
                                                                     region => 'us-east-1',
                                                                     secret => $AWS_ACCESS_KEY_SECRET } );

    Parameters
    id (required)
        You can find within your Smartling project's dashboard:
        <https://dashboard.smartling.com/settings/api>

    region *(optional)* - defaults to us-east-1
        You can find vailable regions at:
        <http://docs.aws.amazon.com/general/latest/gr/rande.html#elasticbean
        stalk_region>

    secret (required)
        You can find within your Smartling project's dashboard:
        <https://dashboard.smartling.com/settings/api>

  fileDelete(*%params*)
    Removes the file from Smartling. The file will no longer be available
    for download. Any complete translations for the file remain available
    for use within the system.

    Smartling deletes files asynchronously and it typically takes a few
    minutes to complete. While deleting a file, you can not upload a file
    with the same fileUri.

    Refer to
    <https://docs.smartling.com/display/docs/Files+API#FilesAPI-/file/delete
    %28DELETE%29>

    Parameters
    fileUri (required)
        Value that uniquely identifies the file.

    Returns: JSON result from API

             {"response":{"code":"SUCCESS","messages":[],"data":null,}}

  ListAvailableSolutionStacks( )
    Returns a list of the available solution stack names.

    Refer to
    <http://docs.aws.amazon.com/elasticbeanstalk/latest/APIReference/API_Lis
    tAvailableSolutionStacks.html>

    Parameters
        none

    Returns: JSON result from API

             {
               "locales": [
                   {
                       "name": "Spanish",
                       "locale": "es",
                       "translated": "Español"
                   },
                   {
                       "name": "French",
                       "locale": "fr-FR",
                       "translated": "Français"
                   }
               ]
             }

             locale - Locale identifier

             name - Source locale name

             translated - Localized locale name

AUTHOR
    Matthew Cox, "<mcox at cpan.org>"

BUGS
    Please report any bugs or feature requests to "bug-webservice-smartling
    at rt.cpan.org", or through the web interface at
    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=WebService-Smartling>. I
    will be notified, and then you'll automatically be notified of progress
    on your bug as I make changes.

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc WebService::Smartling

    You can also look for information at:

    *   RT: CPAN's request tracker (report bugs here)

        <http://rt.cpan.org/NoAuth/Bugs.html?Dist=WebService-Smartling>

    *   AnnoCPAN: Annotated CPAN documentation

        <http://annocpan.org/dist/WebService-Smartling>

    *   CPAN Ratings

        <http://cpanratings.perl.org/d/WebService-Smartling>

    *   Search CPAN

        <http://search.cpan.org/dist/WebService-Smartling/>

SEE ALSO
    perl(1), WebService::Simple, JSON, HTTP::Common::Response

LICENSE AND COPYRIGHT
    Copyright 2013 Matthew Cox.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a copy
    of the full license at:

    <http://www.perlfoundation.org/artistic_license_2_0>

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by the
    Package. If you institute patent litigation (including a cross-claim or
    counterclaim) against any party alleging that the Package constitutes
    direct or contributory patent infringement, then this Artistic License
    to you shall terminate on the date that such litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

